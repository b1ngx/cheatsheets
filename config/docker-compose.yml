version: "3.6"
services:
  gitlab:
    image: "gitlab/gitlab-ce"
    container_name: gitlab
    #ports:
    #  - "8080:80"
    volumes:
      - "/etc/gitlab:/etc/gitlab"
      - "/var/opt/gitlab:/var/opt/gitlab"
      - "/var/log/gitlab:/var/log/gitlab"
    restart: always

  mysql:
    image: mysql
    container_name: mysql
    ports:
      - "3306:3306"
    volumes:
      - "/var/lib/mysql:/var/lib/mysql"
      - "/etc/mysql/conf.d:/etc/mysql/conf.d"
    environment:
      MYSQL_ROOT_PASSWORD: huxiang
      TZ: Asia/Shanghai
    restart: always

  #  mongodb:
  #    image: mongo
  #    container_name: mongodb
  #    ports:
  #      - "27017:27017"
  #    volumes:
  #      - "/var/lib/mongo:/data/db"
  #      - "/etc/mongo:/data/configdb"
  #    restart: always
  #    environment:
  #      MONGO_INITDB_ROOT_USERNAME: root
  #      MONGO_INITDB_ROOT_PASSWORD: example

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - "/var/lib/redis:/data"
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "huxiang"]
    restart: always

  elasticsearch:
    build: ./elasticsearch
    image: elasticsearch-ik
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-origin=*
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
    volumes:
      - es-data:/usr/share/elasticsearch/data
    restart: always

  kibana:
    image: kibana:7.3.2
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://10.1.3.234:9200
    ports:
      - 5601:5601

  scrapyd:
    build: ./scrapyd
    container_name: scrapyd
    ports:
      - "6800:6800"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - "/home/toutiaopro/scrapyd/data:/data"
    depends_on:
      - redis
      - mysql
    restart: always

  toutiao_celery:
    image: django_celery
    container_name: toutiao_celery
    command: celery -B -A toutiaopro worker --loglevel=info
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - "/home/toutiaopro/toutiaopro.com:/app"
    restart: always

  toutiao_django:
    image: django_celery
    container_name: toutiao_django
    #command: python manage.py runserver 0.0.0.0:8000
    command: gunicorn -b 0.0.0.0 toutiaopro.wsgi
    ports:
      - "8000:8000"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - "/home/toutiaopro/toutiaopro.com:/app"
    restart: always

  mindoc:
    image: daocloud.io/lifei6671/docker-mindoc:develop-492b712
    container_name: mindoc
    privileged: false
    restart: always
    ports:
      - 8181:8181
    volumes:
      - /var/www/mindoc/database:/mindoc/database
      - /var/www/mindoc/uploads:/mindoc/uploads
    environment:
      - MINDOC_RUN_MODE=prod
      - MINDOC_DB_ADAPTER=sqlite3
      - MINDOC_DB_DATABASE=./database/mindoc.db
      - MINDOC_CACHE=true
      - MINDOC_CACHE_PROVIDER=file
      - MINDOC_ENABLE_EXPORT=false

  nginx:
    image: "nginx"
    ports:
      - 80:80
    volumes:
      - /var/log/nginx:/var/log/nginx
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always

volumes:
  es-data:
